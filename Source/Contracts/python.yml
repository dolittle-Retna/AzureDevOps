parameters:
  NEW_VERSION: '1.0.0'
  sourceFolder: 'Source'
  packageName: ''
  readMeFile: 'README.md'
  IsMerge: false

steps:
  - bash: |
      echo "Source : ${{ parameters.sourceFolder }}"
      echo "PackageName : ${{ parameters.packageName }}"
      echo "ReadMeFile : ${{ parameters.readMeFile }}"
      echo "Version : ${{ parameters.NEW_VERSION }}"
      echo "Release : ${{ parameters.IsMerge }}"
    displayName: Show Parameters

  - bash: python3 -m pip install --user --upgrade setuptools wheel
    displayName: Install Setup Tools  

  - bash: pip3 install --requirement requirements.txt
    workingDirectory: $(System.DefaultWorkingDirectory)/Contracts.Build/Source/Python
    displayName: Install requirements

  - bash: ./generate.sh $(System.DefaultWorkingDirectory)/${{ parameters.sourceFolder }} $(System.DefaultWorkingDirectory)/Generation/Python ${{ parameters.packageName }} $(Build.Repository.Uri) $(System.DefaultWorkingDirectory)/${{ parameters.readMeFile }} ${{ parameters.NEW_VERSION }}
    workingDirectory: $(System.DefaultWorkingDirectory)/Contracts.Build/Source/Python
    displayName: Generate gRPC Proxies

  - bash: ./package.sh $(System.DefaultWorkingDirectory)/Generation/Python
    workingDirectory: $(System.DefaultWorkingDirectory)/Contracts.Build/Source/Python  
    displayName: Package

  - bash: ./publish.sh $(System.DefaultWorkingDirectory)/Generation/Python
    condition: eq(variables['IsMerge'], 'true')
    workingDirectory: $(System.DefaultWorkingDirectory)/Contracts.Build/Source/Python  
    displayName: Publish
    env:
      TWINE_USERNAME: $(TWINE_USERNAME)
      TWINE_PASSWORD: $(TWINE_PASSWORD)