parameters:
  name: 'DotNetCore_Framework_Job'
  buildConfiguration: 'Release'
  pool: Default
  CASCADES: ''

jobs:
- job: ${{ parameters.name }}
  pool: ${{ parameters.pool }}

  steps:
  - template: ../Versioning/handle_version.yml

  - bash: |
      export VERSION=$(git tag --sort=-version:refname | head -1)
      echo $BUILD_REASON $BUILD_SOURCEVERSION $VERSION
      echo "##vso[task.setvariable variable=VERSION]$VERSION"

      echo "Cascade to :"
      for item in ${CASCADES[*]}
      do
        printf "  %s\n" $item
      done
    displayName: Set Version

  - script: |
      echo The version is $(VERSION)
    displayName: Show version

  - checkout: self
    submodules: recursive

  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.2.203'

  - task: DotNetCoreCLI@2
    displayName: Restore packages
    inputs:
      command: 'restore'
      feedsToUse: 'select'
      versioningScheme: 'off'

  - task: DotNetCoreCLI@2
    displayName: Build release
    inputs:
      command: build
      projects: 'Source/**/*.csproj'
      arguments: '--configuration ${{ parameters.buildConfiguration }}' # Update this to match your need
      
  - task: DotNetCoreCLI@2
    displayName: Run Tests
    inputs:
      command: test
      projects: 'Specifications/**/*.csproj'
      arguments: '--configuration ${{ parameters.buildConfiguration }}'
      
- job: Documentation
  pool: ${{ parameters.pool }}
  variables:
  - group: global-var-pipelines
  
  steps:
    - task: Bash@3
      inputs:
        arguments: $(Build.Repository.Uri)
        targetType: inline
      
    - checkout: self
      persistCredentials: true
      clean: true
    - bash: |
        URL=$(Build.Repository.Uri)

        submodule_name=`echo "$URL" | awk -F "dolittle-" '{ print $2 }'`
        GIT_TERMINAL_PROMPT=1
        mkdir tmp
        cd tmp/
        git clone https://github.com/dolittle/Documentation.git
        cd Documentation/
        cd Source/
        cd repositories/
        git submodule init && git submodule update "$submodule_name"
        cd "$submodule_name"
        git checkout master && git pull
        cd ../../../..
        git add Source/repositories/
        git config --global user.email "documentation@dolittle.do"
        git config --global user.name "Dolittle Documentation"
        git commit -m "Updating Documentation"
        git push https://dolittle-documentation:$(PAT)@github.com/dolittle/Documentation.git --all
        cd ..
        rm -rf Documentation/
        
# echo PullRequest  49e27cc18f57870206171925a8c540abdac7bbfb 2.0.0
# echo IndividualCI 036100265b6d83d536827451131bf8c306ce9d43 2.0.0
