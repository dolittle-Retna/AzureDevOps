parameters:
  CASCADES: []
  START_DIRECTORY: ''

steps:
  - script: echo Looking for cascades and creating steps for them if any
    displayName: Cascading Build initial log
  - ${{ each repo in parameters.CASCADES }}:
    - script: echo ${{ repo }}
      displayName: Log repo
    - bash: |
        git clone --recursive https://github.com/${{ repo }}.git
        DIR=$(echo ${{ repo }} | cut -d "/" -f 2)
        echo "##vso[task.setvariable variable=Folder;isOutput=true]$DIR"
      workingDirectory: $(Agent.BuildDirectory)
      displayName: Clone cascading repo
      name: clone_repo
    
    - template: './build.yml'
      parameters:
        CWD: '$(Agent.BuildDirectory)/$(clone_repo.Folder)'
        buildConfiguration: 'Release'

    # Increment the patch version, simply do it with bash script (look at set_version_variable.yml)

    # do dotnet pack if it has cascading repos using the new version

    - task: DotNetCoreCLI@2
      displayName: Packing
      inputs:
        projects: './Source/**/*.csproj'
        command: 'pack'
        versioningScheme: byEnvVar
        versionEnvVar: set_version.Version
        outputDir: '/root/.nuget/dolittle-packages'
    
  # - ${{ each repo in parameters.CASCADES }}:
  #  -  Get CASCADES from each of the repos git links and do cascading build on those