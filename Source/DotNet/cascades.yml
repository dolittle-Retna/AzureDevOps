parameters:
  name: 'Triggering cascade'
  buildConfiguration: 'Release'
  pool: Default
  CASCADES: ''

steps:

#  - bash: |
#      if [  ]
#        echo "##vso[task.setvariable variable=artifact_exists]YES"
#      else
#        echo "##vso[task.setvariable variable=artifact_exists]NO"
#      fi
    
#  - task: DownloadBuildArtifacts@0
#    condition: eq($(artifact_exists), 'YES')
#    inputs:
#      buildType: 'current'
#      downloadType: 'single'
#      artifactName: 'NugetPack'
#      downloadPath: '$(Build.ArtifactStagingDirectory)'

#  - task: DotNetCoreCLI@2
#    displayName: Push release
#    inputs:
#      command: push
#      searchPatternPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
#      feedPublish: 'put here the Nuget service connection'
      

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: NugetPack
    
# Trigger a new pipeline with empty commit
  - bash: |
      for item in ${{ parameters.CASCADES }}
      do
        git clone https://github.com/"$item".git
        FOLDER=$(echo "$item" | awk -F "/" '{ print $2 }')
        cd $FOLDER
        git checkout origin master
        git config --global user.email $(GitEmail)
        git config --global user.name $(GitUsername)
        git commit --allow-empty -m "Empty commit for pipeline trigger [Auto]"
        git push https://$(GitUsername):$(CascadingBuild)@github.com/"$item".git --all
      done
    displayName: Trigger new pipeline ( $REPO )
    condition: ne($(LABEL), 'major')
