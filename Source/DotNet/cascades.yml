parameters:
  name: 'Triggering cascade'
  buildConfiguration: 'Release'
  pool: Default
  CASCADES: ''

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: NugetPack  
    
  - task: DownloadBuildArtifacts@0
    condition: 
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'NugetPack'
      downloadPath: '$(Build.ArtifactStagingDirectory)'

# DotnetCore functions
  - task: DotNetCoreCLI@2
    displayName: Restore packages
    inputs:
      command: 'restore'
      feedsToUse: 'config'
      versioningScheme: 'off'
      nuGetFeedType: 'internal'
      nugetConfigPath: $(Build.ArtifactStagingDirectory)

  - task: DotNetCoreCLI@2
    displayName: Build release
    inputs:
      command: build
      projects: 'Source/**/*.csproj'
      arguments: '--configuration ${{ parameters.buildConfiguration }}' # Update this to match your need
      packagesDirectory: $(Build.ArtifactStagingDirectory)
  
  - task: DotNetCoreCLI@2
    displayName: Run Tests
    inputs:
      command: test
      projects: 'Specifications/**/*.csproj'
      arguments: '--configuration ${{ parameters.buildConfiguration }}'

  - task: NuGetCommand@2
    displayName: Packing
    condition: succeeded()
    inputs:
      command: pack
      packDirectory: $(Build.ArtifactStagingDirectory)
      packagesToPack: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: Publish release
    condition: succeeded()
    inputs:
      command: publish

# 1 - deploy nuget packages in a folder 

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: NugetPack  
# Trigger a new pipeline by changing a file
  - bash: |
      for item in ${{ parameters.CASCADES }}
      do
        git clone https://github.com/"$item".git --recursive
        git config --global user.email $(GitEmail)
        git config --global user.name $(GitUsername)
        git commit --allow-empty -m "Empty commit for pipeline trigger [Auto]"
        git push https://dolittle-documentation:$(CascadingBuild)@github.com/dolittle/Documentation.git --all
      done
    displayName: Trigger new pipeline ( $REPO )
